
====================================================
======================== TEST ======================
====================================================

1. FFT for complex quantities in tau representation

Test examples:
for N_t = 16
W(t) = delta(t) ==> W(omega) = 1 for all omega
G_0(t) ==> G_0(omega)    compared with hand-written test code result, the same 

Report:
The transform for G(t), W(t) and Gam(t) can all give the correct answer based on discrete FFT.
But the form of G(omega) is not the same with the answer from continuous FFT .
Periodic : W, Chi, Polar
Anti-Periodic : G, Gam, Sigma
====================================================

2. self-consistent integrals in k and omega representation

Test example:
Sigma(t) = (beta/N)**2.d0* \sum_{t1,t2} G(t1) W(t2) Gam(t2-t1, t-t2) direct integral compared with
FFT(Sigma(omega)) = FFT( beta**2.d0/N**3.d0 *\sum_{omega1} G(omega1) W(omega-omega1) Gam(omega1, omega))
Sigma(t) and FFT(Sigma(omega)) are the same

G(t) from old code and FFT(G(omega)) from the current code are the same with error 1% after several 
self-consistent loops

W(t) from old code and FFT(W(omega)) from the current code are the same with error 5% after several 
self-consistent loops except for the tau=0 point

After adding the correction term in Polar, W(t) from old code and FFT(W(omega)) from the current 
code are the same with error 5% for r=(0,0) and r=(1,1); but r=(1,0) still need to be checked

Report:
The self-consistent integrals can give the right answer when they are transferred back to t domain

====================================================


====================================================
======================== BUGS ======================
====================================================

1. The matrix W,Pi,Chi,Gam in r should be (L*L), not (MXL*MXL), otherwise the fourier
transformation would fail

2. The coeffecient in self-consistent integrals should be multiplied by (Beta/N)**4.d0
The delta function in discrete tau domain should be multiplied by (N/Beta)

3. A bug in transfer_Sigma_t (dimension is 1, not Lx*Ly)

