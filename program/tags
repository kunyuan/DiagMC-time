!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
10	monte_carlo_old.f90	/^  10 format(' Line:',i2,2x,'kind:',i2,2x,'type:',i2,2x,'k:',i8,2x,'omega:',i6,2x,'stat:',i2, 2x,&$/;"	l	subroutine:print_config	file:
10	read_write_data.f90	/^  10 format(' Line:',i2,2x,'kind:',i2,2x,'isdelta:',i2,2x,'type:',i2,2x,'k:',i8,2x,'stat:',i2, 2x,&$/;"	l	subroutine:print_config	file:
100	basic_function.f90	/^100 J = 1$/;"	l	subroutine:SFFTEU	file:
100	data_process/collapse_data.f90	/^100 continue$/;"	l	program:main	file:
100	data_process/collapse_statistics.f90	/^100 close(11)$/;"	l	program:MAIN	file:
101	basic_function.f90	/^101    K = N \/ 2$/;"	l	subroutine:SFFTEU	file:
102	basic_function.f90	/^102    if ( K .ge. J ) goto 103$/;"	l	subroutine:SFFTEU	file:
103	basic_function.f90	/^103    J = J + K$/;"	l	subroutine:SFFTEU	file:
12	monte_carlo_old.f90	/^  12 format('Gamma:',i2,2x,'type:',i2,2x,'typein:',i2,2x,'typeout:',i2,2x,'gr:(',i4,i4,'), wr:(',i4,i4,')',&$/;"	l	subroutine:print_config	file:
12	read_write_data.f90	/^  12 format('Gamma:',i2,2x,'isdelta:',i2,2x,'type:',i2,2x,'typein:',i2,2x,'typeout:',i2,2x,&$/;"	l	subroutine:print_config	file:
251	read_write_data.f90	/^  251 format(' Printing interval:',f16.7,2x,'s')$/;"	l	subroutine:print_status	file:
40	basic_function.f90	/^40        do I0 = IS, N-1, ID$/;"	l	subroutine:SFFTEU	file:
50	basic_function.f90	/^50  do I0 = IS, N, ID$/;"	l	subroutine:SFFTEU	file:
51	DiagMC.f90	/^  51 format(' Simulation time:',f16.7,2x,'s')$/;"	l	subroutine:monte_carlo	file:
52	DiagMC.f90	/^    52 format(' Thermalization time:',f16.7,2x,'s')$/;"	l	subroutine:monte_carlo	file:
777	read_write_data.f90	/^ 777  format ('Nsolid ',f6.1,x,f6.1,x,f9.3,' Y')$/;"	l	subroutine:DRAW	file:
778	read_write_data.f90	/^ 778  format ('N ',f6.1,x,f6.1,x,' M')$/;"	l	subroutine:DRAW	file:
779	read_write_data.f90	/^ 779  format (     f6.1,x,f6.1,x,' L')$/;"	l	subroutine:DRAW	file:
780	read_write_data.f90	/^ 780  format ('Nsolid ',f6.1,x,f6.1,x,f9.3,' YL')$/;"	l	subroutine:DRAW	file:
781	read_write_data.f90	/^ 781  format ('Nsolid ',f6.1,x,f6.1,x,f6.1,x,f6.1,x,f6.1,' Y45')$/;"	l	subroutine:DRAW	file:
790	read_write_data.f90	/^ 790  format ('Nsolid ',f6.1,x,f6.1,x,f6.1,x,f6.1,x,' ahead')$/;"	l	subroutine:DRAW	file:
791	read_write_data.f90	/^ 791  format ('Ndashed ',f6.1,x,f6.1,x,f6.1,x,f6.1,x,f6.1,' Y45')$/;"	l	subroutine:DRAW	file:
792	read_write_data.f90	/^ 792  format ('Ndashed ',f6.1,x,f6.1,x,f9.3,' YL')$/;"	l	subroutine:DRAW	file:
801	read_write_data.f90	/^ 801  format (f6.1,x,f6.1,x,' M (',i2,') C')$/;"	l	subroutine:DRAW	file:
802	read_write_data.f90	/^ 802  format (f6.1,x,f6.1,x,' M (',i2,':',f6.3,'; (',i3,',',i3,')) C')$/;"	l	subroutine:DRAW	file:
803	read_write_data.f90	/^ 803  format (f6.1,x,f6.1,x,' M (',A,') C')$/;"	l	subroutine:DRAW	file:
804	read_write_data.f90	/^ 804  format (f6.1,x,f6.1,x,' M (G: ',i2,' ------>',i2') C')$/;"	l	subroutine:DRAW	file:
805	read_write_data.f90	/^ 805  format (f6.1,x,f6.1,x,' M (W: ',i2,' <====>',i2') C')$/;"	l	subroutine:DRAW	file:
Ave	data_process/collapse_statistics.f90	/^    double precision :: Obs(1:Nobs_b, 12000), Ave(/;"	v	program:MAIN
Beta	data_process/collapse_statistics.f90	/^    double precision :: Beta,/;"	v	program:MAIN
Beta	vrbls_mc.f90	/^  double precision ::  Beta /;"	v	module:vrbls_mc
CheckG	vrbls_mc.f90	/^  logical          ::  CheckG,/;"	v	module:vrbls_mc
CheckGam	vrbls_mc.f90	/^  logical          ::  CheckG, CheckW, CheckGam /;"	v	module:vrbls_mc
CheckW	vrbls_mc.f90	/^  logical          ::  CheckG, CheckW,/;"	v	module:vrbls_mc
Chi	vrbls_mc.f90	/^  complex(kind=8), allocatable :: Chi(/;"	v	module:vrbls_mc
CoefOfSymmetry	vrbls_mc.f90	/^  double precision :: CoefOfSymmetry(/;"	v	module:vrbls_mc
CoefOfWeight	vrbls_mc.f90	/^  double precision :: CoefOfWeight(/;"	v	module:vrbls_mc
CoefOfWorm	vrbls_mc.f90	/^  double precision :: CoefOfWorm$/;"	v	module:vrbls_mc
Cor	data_process/collapse_statistics.f90	/^    double precision :: Obs(1:Nobs_b, 12000), Ave(1:Nobs_b), Dev(1:Nobs_b), Cor(/;"	v	program:MAIN
D	vrbls_mc.f90	/^  integer, parameter :: D /;"	v	module:vrbls_mc
DRAW	read_write_data.f90	/^SUBROUTINE DRAW(/;"	s
Dev	data_process/collapse_statistics.f90	/^    double precision :: Obs(1:Nobs_b, 12000), Ave(1:Nobs_b), Dev(/;"	v	program:MAIN
DirecVertex	vrbls_mc.f90	/^  integer, dimension(MxNVertex) :: DirecVertex /;"	v	module:vrbls_mc
ERSTAT	monte_carlo.f90	/^subroutine ERSTAT(/;"	s
Error	vrbls_mc.f90	/^  double precision   :: Error(/;"	v	module:vrbls_mc
FFT_r	basic_function.f90	/^SUBROUTINE FFT_r(/;"	s
FFT_tau_double	basic_function.f90	/^SUBROUTINE FFT_tau_double(/;"	s
FFT_tau_single	basic_function.f90	/^SUBROUTINE FFT_tau_single(/;"	s
Fupdate	vrbls_mc.f90	/^  double precision :: Fupdate(/;"	v	module:vrbls_mc
G	vrbls_mc.f90	/^  complex(kind=8) :: G(/;"	v	module:vrbls_mc
G0F	vrbls_mc.f90	/^  complex(kind=8) :: G0F(/;"	v	module:vrbls_mc
GLnKey2Value	vrbls_mc.f90	/^  integer, dimension(MxNGLn) :: GLnKey2Value /;"	v	module:vrbls_mc
GRVertex	vrbls_mc.f90	/^  integer, dimension(2, MxNVertex) :: GRVertex /;"	v	module:vrbls_mc
Gam	vrbls_mc.f90	/^  complex(kind=8), allocatable :: Gam(/;"	v	module:vrbls_mc
Gam0PF	vrbls_mc.f90	/^  complex(kind=8), allocatable :: Gam0PF(/;"	v	module:vrbls_mc
Gam1	data_process/collapse_data.f90	/^    double precision :: Gam1,/;"	v	program:main
Gam1MR	data_process/collapse_data.f90	/^    double precision :: Gam1MR,/;"	v	program:main
Gam2	data_process/collapse_data.f90	/^    double precision :: Gam1, Gam2,/;"	v	program:main
Gam2Topo	data_process/collapse_data.f90	/^    double precision :: Gam2Topo(/;"	v	program:main
Gam3	data_process/collapse_data.f90	/^    double precision :: Gam1, Gam2, Gam3$/;"	v	program:main
GamMC	data_process/collapse_statistics.f90	/^    double precision :: GamMC(/;"	v	program:MAIN
GamMC	vrbls_mc.f90	/^  double precision, allocatable :: GamMC(/;"	v	module:vrbls_mc
GamMC1	data_process/collapse_data.f90	/^    double precision :: GamMC1(/;"	v	program:main
GamMC2	data_process/collapse_data.f90	/^    double precision :: GamMC2(/;"	v	program:main
GamNorm	data_process/collapse_data.f90	/^    double precision :: Gam1MR, GamNorm(/;"	v	program:main
GamNorm	data_process/collapse_statistics.f90	/^    double precision :: GamMC(1:Nobs_b-1, 12000), GamNorm(/;"	v	program:MAIN
GamNorm	vrbls_mc.f90	/^  double precision :: GamNorm,/;"	v	module:vrbls_mc
GamNormWeight	data_process/collapse_statistics.f90	/^    double precision :: GamMC(1:Nobs_b-1, 12000), GamNorm(12000), GamNormWeight$/;"	v	program:MAIN
GamNormWeight	vrbls_mc.f90	/^  double precision :: GamNorm, GamNormWeight /;"	v	module:vrbls_mc
GamOrder	vrbls_mc.f90	/^  double precision :: GamOrder(/;"	v	module:vrbls_mc
GamSqMC	vrbls_mc.f90	/^  double precision, allocatable :: GamSqMC(/;"	v	module:vrbls_mc
GamSqMC1	data_process/collapse_data.f90	/^    double precision :: GamSqMC1(/;"	v	program:main
GamSqMC2	data_process/collapse_data.f90	/^    double precision :: GamSqMC2(/;"	v	program:main
GamWormOrder	vrbls_mc.f90	/^  double precision :: GamWormOrder(/;"	v	module:vrbls_mc
Hash4G	vrbls_mc.f90	/^  integer, dimension(-MxK:MxK) ::  Hash4G /;"	v	module:vrbls_mc
Hash4W	vrbls_mc.f90	/^  integer, dimension(0:MxK) ::     Hash4W /;"	v	module:vrbls_mc
Ira	vrbls_mc.f90	/^  integer          :: Ira,/;"	v	module:vrbls_mc
IsCluster	send1.4.py	/^IsCluster=False$/;"	v
IsDeltaLn	vrbls_mc.f90	/^  integer, dimension(MxNLn) :: IsDeltaLn /;"	v	module:vrbls_mc
IsDeltaVertex	vrbls_mc.f90	/^  integer, dimension(MxNLn) :: IsDeltaVertex /;"	v	module:vrbls_mc
IsForever	vrbls_mc.f90	/^  logical          :: IsForever$/;"	v	module:vrbls_mc
IsToss	vrbls_mc.f90	/^  logical          :: IsToss$/;"	v	module:vrbls_mc
IsWormPresent	vrbls_mc.f90	/^  logical          :: IsWormPresent /;"	v	module:vrbls_mc
Is_k_valid	basic_function.f90	/^LOGICAL FUNCTION Is_k_valid(/;"	f
Is_reducible_G	basic_function.f90	/^LOGICAL FUNCTION Is_reducible_G(/;"	f
Is_reducible_G	monte_carlo_old.f90	/^LOGICAL FUNCTION Is_reducible_G(/;"	f
Is_reducible_G_Gam	basic_function.f90	/^LOGICAL FUNCTION Is_reducible_G_Gam(/;"	f
Is_reducible_G_Gamma	monte_carlo_old.f90	/^LOGICAL FUNCTION Is_reducible_G_Gamma(/;"	f
Is_reducible_W	basic_function.f90	/^LOGICAL FUNCTION Is_reducible_W(/;"	f
Is_reducible_W	monte_carlo_old.f90	/^LOGICAL FUNCTION Is_reducible_W(/;"	f
Is_reducible_W_Gam	basic_function.f90	/^LOGICAL FUNCTION Is_reducible_W_Gam(/;"	f
Is_reducible_W_Gamma	monte_carlo_old.f90	/^LOGICAL FUNCTION Is_reducible_W_Gamma(/;"	f
Is_x_valid	basic_function.f90	/^LOGICAL FUNCTION Is_x_valid(/;"	f
Is_y_valid	basic_function.f90	/^LOGICAL FUNCTION Is_y_valid(/;"	f
Jcp	vrbls_mc.f90	/^  double precision ::  Jcp /;"	v	module:vrbls_mc
KindLn	vrbls_mc.f90	/^  integer, dimension(MxNLn) :: KindLn /;"	v	module:vrbls_mc
LnValue2Key	vrbls_mc.f90	/^  integer, dimension(MxNLn) ::  LnValue2Key /;"	v	module:vrbls_mc
Lx	data_process/collapse_statistics.f90	/^    integer :: Lx,/;"	v	program:MAIN
Lx	vrbls_mc.f90	/^  integer          ::  Lx,/;"	v	module:vrbls_mc
Ly	data_process/collapse_statistics.f90	/^    integer :: Lx, Ly,/;"	v	program:MAIN
Ly	vrbls_mc.f90	/^  integer          ::  Lx, Ly,/;"	v	module:vrbls_mc
MAIN	data_process/collapse_statistics.f90	/^  PROGRAM MAIN$/;"	p
MCOrder	data_process/collapse_data.f90	/^    integer :: MCOrder$/;"	v	program:main
MCOrder	data_process/collapse_statistics.f90	/^    integer :: Lx, Ly, MCOrder,/;"	v	program:MAIN
MCOrder	vrbls_mc.f90	/^  integer          ::  MCOrder /;"	v	module:vrbls_mc
Masha	vrbls_mc.f90	/^  integer          :: Ira, Masha /;"	v	module:vrbls_mc
MaxStat	vrbls_mc.f90	/^  integer          :: MaxStat$/;"	v	module:vrbls_mc
MeasureGam	vrbls_mc.f90	/^  integer          :: MeasureGam /;"	v	module:vrbls_mc
Mnint	vrbls_mc.f90	/^  integer, parameter          :: Mnint /;"	v	module:vrbls_mc
Mu	vrbls_mc.f90	/^  double precision ::  Mu(/;"	v	module:vrbls_mc
MxError	vrbls_mc.f90	/^  double precision, parameter :: MxError /;"	v	module:vrbls_mc
MxK	vrbls_mc.f90	/^  integer, parameter :: MxK /;"	v	module:vrbls_mc
MxLx	vrbls_mc.f90	/^  integer, parameter :: MxLx /;"	v	module:vrbls_mc
MxLy	vrbls_mc.f90	/^  integer, parameter :: MxLx  = 16, MxLy /;"	v	module:vrbls_mc
MxNGLn	vrbls_mc.f90	/^  integer, parameter :: MxNGLn /;"	v	module:vrbls_mc
MxNLn	vrbls_mc.f90	/^  integer, parameter :: MxNLn /;"	v	module:vrbls_mc
MxNVertex	vrbls_mc.f90	/^  integer, parameter :: MxNVertex /;"	v	module:vrbls_mc
MxNWLn	vrbls_mc.f90	/^  integer, parameter :: MxNWLn /;"	v	module:vrbls_mc
MxNblck	vrbls_mc.f90	/^  integer, parameter          :: MxNblck /;"	v	module:vrbls_mc
MxOmega	data_process/collapse_data.f90	/^    integer, parameter :: MxOmega /;"	v	program:main
MxOmega	data_process/collapse_statistics.f90	/^    integer, parameter :: MxOmega /;"	v	program:MAIN
MxOrder	vrbls_mc.f90	/^  integer, parameter :: MxOrder /;"	v	module:vrbls_mc
MxT	vrbls_mc.f90	/^  integer, parameter :: MxT /;"	v	module:vrbls_mc
MxVol	vrbls_mc.f90	/^  integer, parameter :: MxVol /;"	v	module:vrbls_mc
Mxint	vrbls_mc.f90	/^  integer, parameter          :: Mxint /;"	v	module:vrbls_mc
NGLn	vrbls_mc.f90	/^  integer          :: NGLn,/;"	v	module:vrbls_mc
NObs	vrbls_mc.f90	/^  integer, parameter :: NObs /;"	v	module:vrbls_mc
NSamp	vrbls_mc.f90	/^  integer          :: NSamp /;"	v	module:vrbls_mc
NStep	vrbls_mc.f90	/^  integer          :: NStep /;"	v	module:vrbls_mc
NToss	vrbls_mc.f90	/^  integer          :: NToss /;"	v	module:vrbls_mc
NTypeChi	vrbls_mc.f90	/^  integer, parameter :: NTypeChi /;"	v	module:vrbls_mc
NTypeG	vrbls_mc.f90	/^  integer, parameter :: NTypeG /;"	v	module:vrbls_mc
NTypeGam	vrbls_mc.f90	/^  integer, parameter :: NTypeGam /;"	v	module:vrbls_mc
NTypeW	vrbls_mc.f90	/^  integer, parameter :: NTypeW /;"	v	module:vrbls_mc
NVertex	vrbls_mc.f90	/^  integer          :: NGLn, NWLn, NVertex /;"	v	module:vrbls_mc
NWLn	vrbls_mc.f90	/^  integer          :: NGLn, NWLn,/;"	v	module:vrbls_mc
Nblck	data_process/collapse_statistics.f90	/^    integer :: iblck, omega, ityp, iobs, Nblck$/;"	v	program:MAIN
NeighLn	vrbls_mc.f90	/^  integer, dimension(2,MxNLn) :: NeighLn /;"	v	module:vrbls_mc
NeighVertex	vrbls_mc.f90	/^  integer, dimension(3,MxNVertex) :: NeighVertex /;"	v	module:vrbls_mc
NextLn	vrbls_mc.f90	/^  integer, dimension(MxNLn)  :: NextLn$/;"	v	module:vrbls_mc
NextVertex	vrbls_mc.f90	/^  integer, dimension(MxNVertex):: NextVertex$/;"	v	module:vrbls_mc
Nobs_b	data_process/collapse_statistics.f90	/^    integer, parameter :: Nobs_b /;"	v	program:MAIN
Norm	vrbls_mc.f90	/^  double precision   :: Norm(/;"	v	module:vrbls_mc
Nupdate	vrbls_mc.f90	/^  integer, parameter :: Nupdate /;"	v	module:vrbls_mc
Obs	data_process/collapse_statistics.f90	/^    double precision :: Obs(/;"	v	program:MAIN
ObsRecord	vrbls_mc.f90	/^  double precision, allocatable :: ObsRecord(/;"	v	module:vrbls_mc
Order	vrbls_mc.f90	/^  integer          :: Order /;"	v	module:vrbls_mc
Phase	vrbls_mc.f90	/^  COMPLEX*16       :: Phase /;"	v	module:vrbls_mc
Pi	vrbls_mc.f90	/^  double precision, parameter :: Pi /;"	v	module:vrbls_mc
Pi2	vrbls_mc.f90	/^  double precision, parameter :: Pi2 /;"	v	module:vrbls_mc
Pi4	vrbls_mc.f90	/^  double precision, parameter :: Pi4 /;"	v	module:vrbls_mc
Polar	vrbls_mc.f90	/^  complex(kind=8), allocatable :: Polar(/;"	v	module:vrbls_mc
ProbAcc	vrbls_mc.f90	/^  double precision :: ProbAcc(/;"	v	module:vrbls_mc
ProbProp	vrbls_mc.f90	/^  double precision :: ProbProp(/;"	v	module:vrbls_mc
Pupdate	vrbls_mc.f90	/^  double precision :: Pupdate(/;"	v	module:vrbls_mc
Quan	vrbls_mc.f90	/^  double precision   :: Quan(/;"	v	module:vrbls_mc
QuanName	vrbls_mc.f90	/^  character,dimension(10) :: QuanName$/;"	v	module:vrbls_mc
SFFTEU	basic_function.f90	/^subroutine SFFTEU(/;"	s
Seed	data_process/collapse_statistics.f90	/^    integer :: Lx, Ly, MCOrder, Seed$/;"	v	program:MAIN
Seed	vrbls_mc.f90	/^  integer                      :: Seed /;"	v	module:vrbls_mc
Sigma	vrbls_mc.f90	/^  complex(kind=8) :: Sigma(/;"	v	module:vrbls_mc
SignFermiLoop	vrbls_mc.f90	/^  integer          :: SignFermiLoop /;"	v	module:vrbls_mc
SpInVertex	vrbls_mc.f90	/^  integer, dimension(2,MxNVertex) :: SpInVertex /;"	v	module:vrbls_mc
SpatialWeight	vrbls_mc.f90	/^  double precision :: SpatialWeight(/;"	v	module:vrbls_mc
SpinMasha	vrbls_mc.f90	/^  integer          :: SpinMasha /;"	v	module:vrbls_mc
StatNum	vrbls_mc.f90	/^  integer          :: StatNum$/;"	v	module:vrbls_mc
StatusLn	vrbls_mc.f90	/^  integer, dimension(MxNLn) :: StatusLn /;"	v	module:vrbls_mc
StatusVertex	vrbls_mc.f90	/^  integer, dimension(MxNVertex):: StatusVertex /;"	v	module:vrbls_mc
TVertex	vrbls_mc.f90	/^  double precision, dimension(3, MxNVertex) :: TVertex!/;"	v	module:vrbls_mc
TailLn	vrbls_mc.f90	/^  integer                    :: TailLn /;"	v	module:vrbls_mc
TailVertex	vrbls_mc.f90	/^  integer                      :: TailVertex /;"	v	module:vrbls_mc
TestData	vrbls_mc.f90	/^  double precision,dimension(0:10)  :: TestData$/;"	v	module:vrbls_mc
TypeGam2W	vrbls_mc.f90	/^  integer, dimension(6,6)   :: TypeGam2W$/;"	v	module:vrbls_mc
TypeLn	vrbls_mc.f90	/^  integer, dimension(MxNLn) :: TypeLn /;"	v	module:vrbls_mc
TypeSp2Gam	vrbls_mc.f90	/^  integer, dimension(2,2,2,2) :: TypeSp2Gam$/;"	v	module:vrbls_mc
TypeVertex	vrbls_mc.f90	/^  integer, dimension(MxNVertex) :: TypeVertex /;"	v	module:vrbls_mc
VertexKey2Value	vrbls_mc.f90	/^  integer, dimension(MxNVertex):: VertexKey2Value /;"	v	module:vrbls_mc
VertexValue2Key	vrbls_mc.f90	/^  integer, dimension(MxNVertex):: VertexValue2Key /;"	v	module:vrbls_mc
Vol	vrbls_mc.f90	/^  integer          ::  Lx, Ly, Vol /;"	v	module:vrbls_mc
W	vrbls_mc.f90	/^  complex(kind=8), allocatable :: W(/;"	v	module:vrbls_mc
W0PF	vrbls_mc.f90	/^  complex(kind=8), allocatable :: W0PF(/;"	v	module:vrbls_mc
WLnKey2Value	vrbls_mc.f90	/^  integer, dimension(MxNWLn) :: WLnKey2Value /;"	v	module:vrbls_mc
WRVertex	vrbls_mc.f90	/^  integer, dimension(2, MxNVertex) :: WRVertex /;"	v	module:vrbls_mc
WeightCurrent	vrbls_mc.f90	/^  double precision :: WeightCurrent /;"	v	module:vrbls_mc
WeightLn	vrbls_mc.f90	/^  COMPLEX*16, dimension(MxNLn) :: WeightLn /;"	v	module:vrbls_mc
WeightVertex	vrbls_mc.f90	/^  COMPLEX*16, dimension(MxNVertex) :: WeightVertex /;"	v	module:vrbls_mc
WeightWorm	vrbls_mc.f90	/^  double precision :: WeightWorm /;"	v	module:vrbls_mc
Z_normal	vrbls_mc.f90	/^  double precision :: Z_normal$/;"	v	module:vrbls_mc
Z_worm	vrbls_mc.f90	/^  double precision :: Z_worm$/;"	v	module:vrbls_mc
add_Hash4G	basic_function.f90	/^SUBROUTINE add_Hash4G(/;"	s
add_Hash4G	monte_carlo_old.f90	/^SUBROUTINE add_Hash4G(/;"	s
add_Hash4W	basic_function.f90	/^SUBROUTINE add_Hash4W(/;"	s
add_Hash4W	monte_carlo_old.f90	/^SUBROUTINE add_Hash4W(/;"	s
add_interaction	monte_carlo.f90	/^SUBROUTINE add_interaction$/;"	s
add_interaction	monte_carlo_old.f90	/^SUBROUTINE add_interaction$/;"	s
add_interaction_cross	monte_carlo_old.f90	/^SUBROUTINE add_interaction_cross$/;"	s
add_ira_stat	basic_function.f90	/^INTEGER FUNCTION add_ira_stat(/;"	f
add_ira_stat	monte_carlo_old.f90	/^INTEGER FUNCTION add_ira_stat(/;"	f
add_k	basic_function.f90	/^INTEGER FUNCTION add_k(/;"	f
add_mea_stat	basic_function.f90	/^INTEGER FUNCTION add_mea_stat(/;"	f
add_mea_stat	monte_carlo_old.f90	/^INTEGER FUNCTION add_mea_stat(/;"	f
amax	vrbls_mc.f90	/^	DOUBLE PRECISION :: amax,/;"	v	module:vrbls_mc
amin	vrbls_mc.f90	/^	DOUBLE PRECISION :: amax, tmax, amin,/;"	v	module:vrbls_mc
calculate_Chi	self_consistent.f90	/^SUBROUTINE calculate_Chi$/;"	s
calculate_G	self_consistent.f90	/^SUBROUTINE calculate_G$/;"	s
calculate_GamNormWeight	basic_function.f90	/^SUBROUTINE calculate_GamNormWeight$/;"	s
calculate_Gamma1	analytic_integration.f90	/^SUBROUTINE calculate_Gamma1$/;"	s
calculate_Gamma2	analytic_integration.f90	/^SUBROUTINE calculate_Gamma2$/;"	s
calculate_Polar	self_consistent.f90	/^SUBROUTINE calculate_Polar$/;"	s
calculate_Sigma	self_consistent.f90	/^SUBROUTINE calculate_Sigma$/;"	s
calculate_W	self_consistent.f90	/^SUBROUTINE calculate_W$/;"	s
calculate_W1	analytic_integration.f90	/^SUBROUTINE calculate_W1$/;"	s
change_Gamma_time	monte_carlo.f90	/^SUBROUTINE change_Gamma_time$/;"	s
change_Gamma_type	monte_carlo.f90	/^SUBROUTINE change_Gamma_type$/;"	s
change_Gamma_type	monte_carlo_old.f90	/^SUBROUTINE change_Gamma_type$/;"	s
change_gamma_isdelta	monte_carlo.f90	/^SUBROUTINE change_gamma_isdelta$/;"	s
change_gline_space	monte_carlo.f90	/^SUBROUTINE change_gline_space$/;"	s
change_wline_isdelta	monte_carlo.f90	/^SUBROUTINE change_wline_isdelta$/;"	s
change_wline_space	monte_carlo.f90	/^SUBROUTINE change_wline_space$/;"	s
check_config	check_conf.f90	/^SUBROUTINE check_config$/;"	s
check_irreducibility	check_conf.f90	/^SUBROUTINE check_irreducibility$/;"	s
check_k_conserve	check_conf.f90	/^SUBROUTINE check_k_conserve$/;"	s
check_site	check_conf.f90	/^SUBROUTINE check_site$/;"	s
check_stat	check_conf.f90	/^SUBROUTINE check_stat$/;"	s
check_status	send1.4.py	/^def check_status():$/;"	f
check_time	check_conf.f90	/^SUBROUTINE check_time$/;"	s
check_topo	check_conf.f90	/^SUBROUTINE check_topo$/;"	s
check_type	check_conf.f90	/^SUBROUTINE check_type$/;"	s
check_weight	check_conf.f90	/^SUBROUTINE check_weight$/;"	s
coll_data	statistics.f90	/^  SUBROUTINE coll_data(/;"	s
cpu	send1.4.py	/^cpu=4$/;"	v
create_worm_along_gline	monte_carlo_old.f90	/^SUBROUTINE create_worm_along_gline$/;"	s
create_worm_along_wline	monte_carlo.f90	/^SUBROUTINE create_worm_along_wline$/;"	s
create_worm_along_wline	monte_carlo_old.f90	/^SUBROUTINE create_worm_along_wline$/;"	s
dLx	vrbls_mc.f90	/^  integer          ::  dLx,/;"	v	module:vrbls_mc
dLy	vrbls_mc.f90	/^  integer          ::  dLx, dLy$/;"	v	module:vrbls_mc
d_times_cd	basic_function.f90	/^COMPLEX*16 FUNCTION d_times_cd(/;"	f
date	vrbls_mc.f90	/^  character( 8)         :: date$/;"	v	module:vrbls_mc
def_conf	monte_carlo_old.f90	/^subroutine def_conf$/;"	s
def_diagram	monte_carlo.f90	/^SUBROUTINE def_diagram$/;"	s
def_diagram	monte_carlo_old.f90	/^SUBROUTINE def_diagram$/;"	s
def_prob	monte_carlo.f90	/^SUBROUTINE def_prob$/;"	s
def_spatial_weight	monte_carlo.f90	/^SUBROUTINE def_spatial_weight$/;"	s
def_spin	monte_carlo.f90	/^SUBROUTINE def_spin$/;"	s
def_spin	monte_carlo_old.f90	/^SUBROUTINE def_spin$/;"	s
def_symmetry	basic_function.f90	/^SUBROUTINE def_symmetry$/;"	s
delete_Hash4G	basic_function.f90	/^SUBROUTINE delete_Hash4G(/;"	s
delete_Hash4G	monte_carlo_old.f90	/^SUBROUTINE delete_Hash4G(/;"	s
delete_Hash4W	basic_function.f90	/^SUBROUTINE delete_Hash4W(/;"	s
delete_Hash4W	monte_carlo_old.f90	/^SUBROUTINE delete_Hash4W(/;"	s
delete_gamma	basic_function.f90	/^SUBROUTINE delete_gamma(/;"	s
delete_gamma	monte_carlo_old.f90	/^SUBROUTINE delete_gamma(/;"	s
delete_ira_stat	basic_function.f90	/^INTEGER FUNCTION delete_ira_stat(/;"	f
delete_ira_stat	monte_carlo_old.f90	/^INTEGER FUNCTION delete_ira_stat(/;"	f
delete_line	basic_function.f90	/^SUBROUTINE delete_line(/;"	s
delete_line	monte_carlo_old.f90	/^SUBROUTINE delete_line(/;"	s
delete_mea_stat	basic_function.f90	/^INTEGER FUNCTION delete_mea_stat(/;"	f
delete_mea_stat	monte_carlo_old.f90	/^INTEGER FUNCTION delete_mea_stat(/;"	f
delete_worm_along_gline	monte_carlo_old.f90	/^SUBROUTINE delete_worm_along_gline$/;"	s
delete_worm_along_wline	monte_carlo.f90	/^SUBROUTINE delete_worm_along_wline$/;"	s
delete_worm_along_wline	monte_carlo_old.f90	/^SUBROUTINE delete_worm_along_wline$/;"	s
diff_x	basic_function.f90	/^INTEGER FUNCTION diff_x(/;"	f
diff_y	basic_function.f90	/^INTEGER FUNCTION diff_y(/;"	f
eachline	send1.4.py	/^    eachline=eachline.lstrip(' ').rstrip(last)$/;"	v
execute	send1.4.py	/^execute=".\/gamma3.exe"$/;"	v
file1	data_process/collapse.py	/^file1 = title + "_Gamma_MC.dat"$/;"	v
file2	data_process/collapse.py	/^file2 = title + "_-*_Gamma_MC.dat"$/;"	v
file3	data_process/collapse.py	/^file3 = title + "_monte_carlo_data.dat"$/;"	v
file4	data_process/collapse.py	/^file4 = title + "_-*_monte_carlo_data.dat"$/;"	v
file_version	vrbls_mc.f90	/^  integer:: file_version$/;"	v	module:vrbls_mc
find_config	monte_carlo_old.f90	/^INTEGER FUNCTION find_config(/;"	f
first_order_diagram	basic_function.f90	/^SUBROUTINE first_order_diagram$/;"	s
first_order_diagram_with_bubble	basic_function.f90	/^SUBROUTINE first_order_diagram_with_bubble$/;"	s
flag	send1.4.py	/^                flag=True$/;"	v
flag	send1.4.py	/^        flag=False$/;"	v
generate_gline	basic_function.f90	/^INTEGER FUNCTION generate_gline(/;"	f
generate_k	basic_function.f90	/^INTEGER FUNCTION generate_k(/;"	f
generate_tau	basic_function.f90	/^DOUBLE PRECISION FUNCTION generate_tau(/;"	f
generate_vertex	basic_function.f90	/^INTEGER FUNCTION generate_vertex(/;"	f
generate_wline	basic_function.f90	/^INTEGER FUNCTION generate_wline(/;"	f
generate_x	basic_function.f90	/^SUBROUTINE generate_x(/;"	s
generate_y	basic_function.f90	/^SUBROUTINE generate_y(/;"	s
gline_stat	basic_function.f90	/^INTEGER FUNCTION gline_stat(/;"	f
h_curr	vrbls_mc.f90	/^  integer               :: h_prev, h_curr$/;"	v	module:vrbls_mc
h_prev	vrbls_mc.f90	/^  integer               :: h_prev,/;"	v	module:vrbls_mc
homedir	send1.4.py	/^homedir=os.getcwd()$/;"	v
i	data_process/collapse_data.f90	/^    in/;"	v	program:main
ibasis	data_process/collapse_data.f90	/^    integer :: itopo, ix, iy, ityp, ibasis,/;"	v	program:main
ibasis2	data_process/collapse_data.f90	/^    integer :: itopo, ix, iy, ityp, ibasis, ibasis2,/;"	v	program:main
iblck	data_process/collapse_statistics.f90	/^    integer :: iblck,/;"	v	program:MAIN
ifd1	vrbls_mc.f90	/^  integer, parameter           :: len1=9689,    ifd1=/;"	v	module:vrbls_mc
ifd2	vrbls_mc.f90	/^  integer, parameter           :: len2=127,     ifd2=/;"	v	module:vrbls_mc
ifile	data_process/collapse_data.f90	/^    integer :: ifile$/;"	v	program:main
imc	vrbls_mc.f90	/^  double precision :: imc /;"	v	module:vrbls_mc
ime	data_process/collapse_data.f90	/^    double precision :: ime(/;"	v	program:main
imeasure	vrbls_mc.f90	/^  double precision :: imeasure$/;"	v	module:vrbls_mc
initialize_G	self_consistent.f90	/^SUBROUTINE initialize_G$/;"	s
initialize_G0F	self_consistent.f90	/^SUBROUTINE initialize_G0F$/;"	s
initialize_Gam	self_consistent.f90	/^SUBROUTINE initialize_Gam$/;"	s
initialize_Gam0PF	self_consistent.f90	/^SUBROUTINE initialize_Gam0PF$/;"	s
initialize_W	self_consistent.f90	/^SUBROUTINE initialize_W$/;"	s
initialize_W0PF	self_consistent.f90	/^SUBROUTINE initialize_W0PF$/;"	s
initialize_markov	monte_carlo.f90	/^SUBROUTINE initialize_markov$/;"	s
initialize_self_consistent	self_consistent.f90	/^SUBROUTINE initialize_self_consistent$/;"	s
inlist	send1.4.py	/^inlist=open(homedir+"\/inlist","r")$/;"	v
insert_gamma	basic_function.f90	/^SUBROUTINE insert_gamma(/;"	s
insert_gamma	monte_carlo_old.f90	/^SUBROUTINE insert_gamma(/;"	s
insert_line	basic_function.f90	/^SUBROUTINE insert_line(/;"	s
insert_line	monte_carlo_old.f90	/^SUBROUTINE insert_line(/;"	s
inxt1	vrbls_mc.f90	/^  integer, dimension(1:len1)   :: inxt1$/;"	v	module:vrbls_mc
inxt2	vrbls_mc.f90	/^  integer, dimension(1:len2)   :: inxt2$/;"	v	module:vrbls_mc
iobs	data_process/collapse_statistics.f90	/^    integer :: iblck, omega, ityp, iobs,/;"	v	program:MAIN
iomega1	data_process/collapse_data.f90	/^    integer :: itopo, ix, iy, ityp, ibasis, ibasis2, iomega1,/;"	v	program:main
iomega2	data_process/collapse_data.f90	/^    integer :: itopo, ix, iy, ityp, ibasis, ibasis2, iomega1, iomega2$/;"	v	program:main
iorder	data_process/collapse_data.f90	/^    integer :: i, itot, iorder$/;"	v	program:main
ipnf1	vrbls_mc.f90	/^  integer                      :: ipnt1, ipnf1$/;"	v	module:vrbls_mc
ipnf2	vrbls_mc.f90	/^  integer                      :: ipnt2, ipnf2$/;"	v	module:vrbls_mc
ipnt1	vrbls_mc.f90	/^  integer                      :: ipnt1,/;"	v	module:vrbls_mc
ipnt2	vrbls_mc.f90	/^  integer                      :: ipnt2,/;"	v	module:vrbls_mc
ir1	vrbls_mc.f90	/^  integer, dimension(1:len1)   :: ir1$/;"	v	module:vrbls_mc
ir2	vrbls_mc.f90	/^  integer, dimension(1:len2)   :: ir2$/;"	v	module:vrbls_mc
irn	vrbls_mc.f90	/^  integer, dimension(1:mxrn)   :: irn(/;"	v	module:vrbls_mc
is_topo_1	monte_carlo_old.f90	/^LOGICAL FUNCTION is_topo_1(/;"	f
is_topo_2	monte_carlo_old.f90	/^LOGICAL FUNCTION is_topo_2(/;"	f
itopo	data_process/collapse_data.f90	/^    integer :: itopo,/;"	v	program:main
itot	data_process/collapse_data.f90	/^    integer :: i, itot,/;"	v	program:main
ityp	data_process/collapse_data.f90	/^    integer :: itopo, ix, iy, ityp,/;"	v	program:main
ityp	data_process/collapse_statistics.f90	/^    integer :: iblck, omega, ityp,/;"	v	program:MAIN
iupdate	vrbls_mc.f90	/^  integer          :: iupdate /;"	v	module:vrbls_mc
ix	data_process/collapse_data.f90	/^    integer :: itopo, ix,/;"	v	program:main
iy	data_process/collapse_data.f90	/^    integer :: itopo, ix, iy,/;"	v	program:main
kLn	vrbls_mc.f90	/^  integer, dimension(MxNLn) :: kLn /;"	v	module:vrbls_mc
kMasha	vrbls_mc.f90	/^  integer          :: kMasha /;"	v	module:vrbls_mc
key	send1.4.py	/^            key=eachline.split(":")[0].lstrip(' ').rstrip(' ')$/;"	v
last	send1.4.py	/^    last="\\n"$/;"	v
last	send1.4.py	/^last=inlist.readline()[-2:]$/;"	v
len1	vrbls_mc.f90	/^  integer, parameter           :: len1=/;"	v	module:vrbls_mc
len2	vrbls_mc.f90	/^  integer, parameter           :: len2=/;"	v	module:vrbls_mc
line_stat	monte_carlo_old.f90	/^INTEGER FUNCTION line_stat(/;"	f
logLx	vrbls_mc.f90	/^  double precision  ::  logLx,/;"	v	module:vrbls_mc
logLy	vrbls_mc.f90	/^  double precision  ::  logLx,logLy$/;"	v	module:vrbls_mc
logstr	vrbls_mc.f90	/^  character*100 :: logstr$/;"	v	module:vrbls_mc
main	data_process/collapse_data.f90	/^  program main$/;"	p
markov	monte_carlo.f90	/^SUBROUTINE markov(/;"	s
markov	monte_carlo_old.f90	/^SUBROUTINE markov$/;"	s
measure	monte_carlo.f90	/^SUBROUTINE measure$/;"	s
measure	monte_carlo_old.f90	/^SUBROUTINE measure$/;"	s
mod2	vrbls_mc.f90	/^  integer, parameter           :: mod2=/;"	v	module:vrbls_mc
monte_carlo	DiagMC.f90	/^SUBROUTINE monte_carlo$/;"	s
move_measuring_index	monte_carlo.f90	/^SUBROUTINE move_measuring_index$/;"	s
move_measuring_index	monte_carlo_old.f90	/^SUBROUTINE move_measuring_index$/;"	s
move_worm_along_gline	monte_carlo.f90	/^SUBROUTINE move_worm_along_gline$/;"	s
move_worm_along_gline	monte_carlo_old.f90	/^SUBROUTINE move_worm_along_gline$/;"	s
move_worm_along_wline	monte_carlo.f90	/^SUBROUTINE move_worm_along_wline$/;"	s
move_worm_along_wline	monte_carlo_old.f90	/^SUBROUTINE move_worm_along_wline$/;"	s
mul2	vrbls_mc.f90	/^  integer, parameter           :: mod2=2796203, mul2=/;"	v	module:vrbls_mc
mult	vrbls_mc.f90	/^  integer, parameter           :: mult=/;"	v	module:vrbls_mc
mxrn	vrbls_mc.f90	/^  integer, parameter           :: mxrn /;"	v	module:vrbls_mc
nme	data_process/collapse_data.f90	/^    double precision :: ime(100), nme$/;"	v	program:main
norm_data	data_process/collapse_statistics.f90	/^  SUBROUTINE norm_data$/;"	s	program:MAIN
norm_data	statistics.f90	/^  SUBROUTINE norm_data$/;"	s
nrannr	vrbls_mc.f90	/^  integer                      :: nrannr /;"	v	module:vrbls_mc
num	send1.4.py	/^        num=submit_jobs(para,num,execute,homedir)$/;"	v
num	send1.4.py	/^num=0$/;"	v
omega	data_process/collapse_statistics.f90	/^    integer :: iblck, omega,/;"	v	program:MAIN
order	data_process/collapse_data.f90	/^    character*1 :: order$/;"	v	program:main
output_GamMC	data_process/collapse_statistics.f90	/^  SUBROUTINE output_GamMC$/;"	s	program:MAIN
output_Quantities	read_write_data.f90	/^SUBROUTINE output_Quantities$/;"	s
para	send1.4.py	/^        para=para_init()$/;"	v
para	send1.4.py	/^para=para_init()$/;"	v
para_init	send1.4.py	/^def para_init():$/;"	f
plus_minus_Gam0	self_consistent.f90	/^SUBROUTINE plus_minus_Gam0(/;"	s
plus_minus_W0	self_consistent.f90	/^SUBROUTINE plus_minus_W0(/;"	s
print_config	monte_carlo_old.f90	/^SUBROUTINE print_config$/;"	s
print_config	read_write_data.f90	/^SUBROUTINE print_config$/;"	s
print_status	read_write_data.f90	/^SUBROUTINE print_status$/;"	s
print_updates	monte_carlo_old.f90	/^SUBROUTINE print_updates$/;"	s
prob_dx	basic_function.f90	/^DOUBLE PRECISION FUNCTION prob_dx(/;"	f
prob_dy	basic_function.f90	/^DOUBLE PRECISION FUNCTION prob_dy(/;"	f
prob_tau	basic_function.f90	/^DOUBLE PRECISION FUNCTION prob_tau(/;"	f
proclist	send1.4.py	/^proclist=[]$/;"	v
prt	data_process/collapse_statistics.f90	/^    logical :: prt$/;"	v	program:MAIN
prt	vrbls_mc.f90	/^  logical :: prt$/;"	v	module:vrbls_mc
read_GWGamma	read_write_data.f90	/^SUBROUTINE read_GWGamma$/;"	s
read_monte_carlo_conf	read_write_data.f90	/^SUBROUTINE read_monte_carlo_conf$/;"	s
read_monte_carlo_data	read_write_data.f90	/^SUBROUTINE read_monte_carlo_data$/;"	s
reconnect	monte_carlo.f90	/^SUBROUTINE reconnect$/;"	s
reconnect	monte_carlo_old.f90	/^SUBROUTINE reconnect$/;"	s
remove_interaction	monte_carlo.f90	/^SUBROUTINE remove_interaction$/;"	s
remove_interaction	monte_carlo_old.f90	/^SUBROUTINE remove_interaction$/;"	s
remove_interaction_cross	monte_carlo_old.f90	/^SUBROUTINE remove_interaction_cross$/;"	s
rn	basic_function.f90	/^DOUBLE PRECISION FUNCTION rn(/;"	f
second_order_diagram	basic_function.f90	/^SUBROUTINE second_order_diagram$/;"	s
self_consistent	DiagMC.f90	/^SUBROUTINE self_consistent$/;"	s
self_consistent_GW	DiagMC.f90	/^LOGICAL FUNCTION self_consistent_GW(/;"	f
set_RNG	basic_function.f90	/^SUBROUTINE set_RNG$/;"	s
set_time_elapse	basic_function.f90	/^SUBROUTINE set_time_elapse$/;"	s
shift_gline_in_space	monte_carlo_old.f90	/^SUBROUTINE shift_gline_in_space$/;"	s
shift_wline_in_space	monte_carlo_old.f90	/^SUBROUTINE shift_wline_in_space$/;"	s
site_num	read_write_data.f90	/^INTEGER FUNCTION site_num(/;"	f
stat_analy	data_process/collapse_statistics.f90	/^  SUBROUTINE stat_analy$/;"	s	program:MAIN
stat_analy	statistics.f90	/^  SUBROUTINE stat_analy$/;"	s
statistics	monte_carlo.f90	/^SUBROUTINE statistics$/;"	s
str	data_process/collapse_statistics.f90	/^    character*100 :: str,/;"	v	program:MAIN
submit_jobs	send1.4.py	/^def submit_jobs(para,i,execute,homedir):$/;"	f
switch_ira_and_masha	monte_carlo.f90	/^SUBROUTINE switch_ira_and_masha$/;"	s
t_curr	vrbls_mc.f90	/^  double precision      :: t_prev, t_curr,/;"	v	module:vrbls_mc
t_elap	vrbls_mc.f90	/^  double precision      :: t_prev, t_curr, t_elap$/;"	v	module:vrbls_mc
t_init	vrbls_mc.f90	/^  double precision      :: t_init,/;"	v	module:vrbls_mc
t_meas	vrbls_mc.f90	/^  double precision      :: t_init, t_simu, t_meas,/;"	v	module:vrbls_mc
t_prev	vrbls_mc.f90	/^  double precision      :: t_prev,/;"	v	module:vrbls_mc
t_simu	vrbls_mc.f90	/^  double precision      :: t_init, t_simu,/;"	v	module:vrbls_mc
t_toss	vrbls_mc.f90	/^  double precision      :: t_init, t_simu, t_meas, t_toss$/;"	v	module:vrbls_mc
temp	data_process/collapse_statistics.f90	/^    double precision :: Beta, temp$/;"	v	program:MAIN
test_subroutine	DiagMC.f90	/^SUBROUTINE test_subroutine$/;"	s
time	vrbls_mc.f90	/^  character(10)         :: time$/;"	v	module:vrbls_mc
time_elapse	basic_function.f90	/^SUBROUTINE time_elapse$/;"	s
title	data_process/collapse.py	/^title = "0.50_2"$/;"	v
title	data_process/collapse_data.f90	/^    character*100 title$/;"	v	program:main
title	data_process/collapse_statistics.f90	/^    character*100 :: str, title$/;"	v	program:MAIN
title	vrbls_mc.f90	/^  character*100 :: title$/;"	v	module:vrbls_mc
title1	vrbls_mc.f90	/^  character*100 :: title1$/;"	v	module:vrbls_mc
title2	vrbls_mc.f90	/^  character*100 :: title2$/;"	v	module:vrbls_mc
title3	vrbls_mc.f90	/^  character*100 :: title3$/;"	v	module:vrbls_mc
title4	vrbls_mc.f90	/^  character*100 :: title4$/;"	v	module:vrbls_mc
tm32	vrbls_mc.f90	/^  double precision, parameter :: tm32 /;"	v	module:vrbls_mc
tmax	vrbls_mc.f90	/^	DOUBLE PRECISION :: amax, tmax,/;"	v	module:vrbls_mc
tmin	vrbls_mc.f90	/^	DOUBLE PRECISION :: amax, tmax, amin, tmin$/;"	v	module:vrbls_mc
transfer_Chi_r	basic_function.f90	/^SUBROUTINE transfer_Chi_r(/;"	s
transfer_Chi_t	basic_function.f90	/^SUBROUTINE transfer_Chi_t(/;"	s
transfer_G0	basic_function.f90	/^SUBROUTINE transfer_G0(/;"	s
transfer_G_t	basic_function.f90	/^SUBROUTINE transfer_G_t(/;"	s
transfer_Gam0	basic_function.f90	/^SUBROUTINE transfer_Gam0(/;"	s
transfer_Gam_r	basic_function.f90	/^SUBROUTINE transfer_Gam_r(/;"	s
transfer_Gam_t	basic_function.f90	/^SUBROUTINE transfer_Gam_t(/;"	s
transfer_Sigma_t	basic_function.f90	/^SUBROUTINE transfer_Sigma_t(/;"	s
transfer_W0	basic_function.f90	/^SUBROUTINE transfer_W0(/;"	s
transfer_W_r	basic_function.f90	/^SUBROUTINE transfer_W_r(/;"	s
transfer_W_t	basic_function.f90	/^SUBROUTINE transfer_W_t(/;"	s
transfer_r	basic_function.f90	/^SUBROUTINE transfer_r(/;"	s
transfer_t	basic_function.f90	/^SUBROUTINE transfer_t(/;"	s
tval	vrbls_mc.f90	/^  integer, dimension(8) :: tval$/;"	v	module:vrbls_mc
undo_delete_gamma	basic_function.f90	/^SUBROUTINE undo_delete_gamma(/;"	s
undo_delete_gamma	monte_carlo_old.f90	/^SUBROUTINE undo_delete_gamma(/;"	s
undo_delete_line	basic_function.f90	/^SUBROUTINE undo_delete_line(/;"	s
undo_delete_line	monte_carlo_old.f90	/^SUBROUTINE undo_delete_line(/;"	s
undo_insert_line	basic_function.f90	/^SUBROUTINE undo_insert_line(/;"	s
undo_insert_line	monte_carlo_old.f90	/^SUBROUTINE undo_insert_line(/;"	s
update_Hash4G	basic_function.f90	/^SUBROUTINE update_Hash4G(/;"	s
update_Hash4G	monte_carlo_old.f90	/^SUBROUTINE update_Hash4G(/;"	s
update_Hash4W	basic_function.f90	/^SUBROUTINE update_Hash4W(/;"	s
update_Hash4W	monte_carlo_old.f90	/^SUBROUTINE update_Hash4W(/;"	s
update_weight	monte_carlo.f90	/^SUBROUTINE update_weight(/;"	s
update_weight	monte_carlo_old.f90	/^SUBROUTINE update_weight(/;"	s
value	send1.4.py	/^            value=eachline.split(":")[1].lstrip(' ').rstrip(' ')$/;"	v
vrbls_mc	vrbls_mc.f90	/^MODULE vrbls_mc$/;"	m
weight_G	self_consistent.f90	/^COMPLEX*16 FUNCTION weight_G(/;"	f
weight_G0	self_consistent.f90	/^Complex*16 FUNCTION weight_G0(/;"	f
weight_Gam	self_consistent.f90	/^COMPLEX*16 FUNCTION weight_Gam(/;"	f
weight_Gam0	self_consistent.f90	/^COMPLEX*16 FUNCTION weight_Gam0(/;"	f
weight_W	self_consistent.f90	/^COMPLEX*16 FUNCTION weight_W(/;"	f
weight_W0	self_consistent.f90	/^Complex*16 FUNCTION weight_W0(/;"	f
weight_line	monte_carlo.f90	/^COMPLEX*16 FUNCTION weight_line(/;"	f
weight_line	monte_carlo_old.f90	/^DOUBLE PRECISION FUNCTION weight_line(/;"	f
weight_meas_G	basic_function.f90	/^complex*16 FUNCTION weight_meas_G(/;"	f
weight_meas_Gam	basic_function.f90	/^complex*16 FUNCTION weight_meas_Gam(/;"	f
weight_meas_W	basic_function.f90	/^complex*16 FUNCTION weight_meas_W(/;"	f
weight_ratio	monte_carlo.f90	/^SUBROUTINE weight_ratio(/;"	s
weight_ratio	monte_carlo_old.f90	/^SUBROUTINE weight_ratio(/;"	s
weight_vertex	monte_carlo.f90	/^COMPLEX*16 FUNCTION weight_vertex(/;"	f
weight_vertex	monte_carlo_old.f90	/^DOUBLE PRECISION FUNCTION weight_vertex(/;"	f
weight_worm	basic_function.f90	/^DOUBLE PRECISION FUNCTION weight_worm(/;"	f
weight_worm_Gam	basic_function.f90	/^complex*16 FUNCTION weight_worm_Gam(/;"	f
weight_worm_W	basic_function.f90	/^complex*16 FUNCTION weight_worm_W(/;"	f
wline_stat	basic_function.f90	/^INTEGER FUNCTION wline_stat(/;"	f
write_GWGamma	read_write_data.f90	/^SUBROUTINE write_GWGamma$/;"	s
write_log	read_write_data.f90	/^SUBROUTINE write_log$/;"	s
write_monte_carlo_conf	read_write_data.f90	/^SUBROUTINE write_monte_carlo_conf$/;"	s
write_monte_carlo_data	read_write_data.f90	/^SUBROUTINE write_monte_carlo_data$/;"	s
write_monte_carlo_test	read_write_data.f90	/^SUBROUTINE write_monte_carlo_test$/;"	s
zone	vrbls_mc.f90	/^  character(5 )         :: zone$/;"	v	module:vrbls_mc
