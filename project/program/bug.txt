

!------------ change gline space: Pupdate(12) ------------
SUBROUTINE change_gline_space
  implicit none
  integer :: Num,InitialGam,iGam,jGam,iWLn,NewRG(2),dR(2)
  integer :: GamList(MxNVertex),NewRW(2,MxNVertex),i
  integer :: flagW(MxNLn)
  double precision :: Pacc, WeightR, tau
  complex*16  ::  Anew, Aold, sgn, WeightW(MxNVertex)

  !------- step1 : check if worm is present -------------
  if(IsWormPresent .eqv. .true.)    return

  !------- step2 : propose a new config -----------------
  iGam=generate_vertex()
  InitialGam=iGam

  WeightR=1.d0
  call generate_xy(GRVertex(:,iGam),NewRG,dR,WeightR,.true.)
  if(WeightR<=1.d-12)  return   !!!!!!!!!just to exclude the extremely small weight

  flagW(:) = 0
  Num=0
  do while(.true.)
    Num=Num+1
    iWLn=NeighVertex(3,iGam)

    flagW(iWLn) = flagW(iWLn) + 1

    GamList(Num)=iGam
    iGam=NeighLn(2,NeighVertex(2,iGam))
    if(InitialGam==iGam) exit
  enddo

  AOld=(1.d0, 0.d0)
  ANew=(1.d0, 0.d0)
  do i = 1, Num
    iGam = GamList(i)
    iWLn=NeighVertex(3,iGam)
    WeightR = 1.d0  !!!!should I initialize the weightR here?
    call generate_xy(WRVertex(:,iGam),NewRW(:,i),dR,WeightR,.false.)
    if(WeightR<=1.d-12)  return !!!! exclude small weight

    if(flagW(iWLn)==1) then
      jGam=NeighLn(3-DirecVertex(iGam),iWLn)
      tau = (-1)**DirecVertex(iGam)*(TVertex(3, iGam)-TVertex(3, jGam))
      WeightW(i)=weight_wline(StatusLn(iWLn),IsDeltaLn(iWLn),&
          & NewRW(:,i)-WRVertex(:,jGam),tau,TypeLn(iWLn))

      Anew=Anew*WeightW(i)
      Aold=Aold*WeightLn(iWLn)
      if(abs(Anew)<macheps*abs(Aold)) return
    endif
  enddo

  call weight_ratio(Pacc, sgn, Anew, Aold)

  Pacc=Pacc/WeightR

  !------- step5 : accept the update --------------------
  ProbProp(Order, 12) = ProbProp(Order, 12) + 1
  if(rn()<Pacc) then

    !------ update the diagram info -------------------
    Phase = Phase *sgn

    do i = 1, Num
      iGam=GamList(i)
      iWLn=NeighVertex(3,iGam)

      !------ update the site of elements -------------
      GRVertex(:,iGam) = NewRG(:)
      WRVertex(:,iGam) = NewRW(:,i)

      !------ update the weight of elements -------------
      if(flagW(iWLn)==1) then
        WeightLn(iWLn)  = WeightW(i)
      endif
    enddo

    call update_weight(Anew, Aold)
    ProbAcc(Order, 12) = ProbAcc(Order, 12) + 1
  endif
  return
  
END SUBROUTINE


!------------ change wline space: Pupdate(13) ------------
SUBROUTINE change_wline_space
    implicit none
    integer :: iGam, iWLn, jGam, rwi(2), rwj(2), dir,dr(2)
    double precision :: Pacc,T1,T2,T3,T4,T5,T6,WeightR
    complex*16  ::  WiGam,WjGam, WW, Anew, Aold, sgn

    !------- step1 : check if worm is present -------------
    if(IsWormPresent .eqv. .true.)    return

    !------- step2 : propose a new config -----------------
    iWLn=generate_wline()
    iGam = NeighLn(1, iWLn)
    jGam = NeighLn(2, iWLn)

    WeightR=1.0
    call generate_xy(WRVertex(:, iGam),rwi,dr,WeightR,.true.);
    if(WeightR<=1.d-12)  return   !!!!!!!!!!!just to exclude small weight

    if(IsDeltaLn(iWLn)==0) then
      !!!!!!!!!!! should I initialize weightR? according to my understanding, I should not initialize it, am I right?
      call generate_xy(WRVertex(:, jGam),rwj,dr,WeightR,.true.);
      if(WeightR<=1.d-12)  return   !!!!!!!!!!!just to exclude small weight

    else   !!!!!!!!!! should I define rwj when W is delta?
      rwj(:)=rwi(:)   !!!!!!!!!! should I define rwj when W is delta?

    endif

    !------- step3 : configuration check ------------------

    !------- step4 : weight calculation -------------------
    T1=TVertex(1, iGam);
    T2=TVertex(2, iGam);
    T3=TVertex(3, iGam);
    WiGam = weight_vertex(StatusVertex(iGam),IsDeltaVertex(iGam), &
      & GRVertex(:, iGam)-rwi(:), T3-T2, T1-T3, TypeVertex(iGam))

    T4=TVertex(1, jGam);
    T5=TVertex(2, jGam);
    T6=TVertex(3, jGam);
    WjGam = weight_vertex(StatusVertex(jGam),IsDeltaVertex(jGam), &
      & GRVertex(:, jGam)-rwj(:), T6-T5, T4-T6, TypeVertex(jGam))

    WW = weight_wline(StatusLn(iWLn),IsDeltaLn(iWLn),rwi(:)-rwj(:),T6-T3,TypeLn(iWLn))

    Anew = WiGam*WjGam*WW
    Aold = WeightLn(iWLn)*WeightVertex(iGam)*WeightVertex(jGam)

    call weight_ratio(Pacc, sgn, Anew, Aold)
    Pacc = Pacc/WeightR

    !------- step5 : accept the update --------------------
    ProbProp(Order, 13) = ProbProp(Order, 13) + 1
    if(rn()<Pacc) then

      !------ update the diagram info -------------------
      Phase = Phase *sgn

      !------ update the site of elements --------------
      WRVertex(:, iGam) = rwi(:)
      WRVertex(:, jGam) = rwj(:)

      !------ update the weight of elements ------------
      WeightLn(iWLn) = WW
      WeightVertex(iGam) = WiGam
      WeightVertex(jGam) = WjGam

      call update_weight(Anew, Aold)

      ProbAcc(Order, 13) = ProbAcc(Order, 13) + 1
    endif
    return
end SUBROUTINE

